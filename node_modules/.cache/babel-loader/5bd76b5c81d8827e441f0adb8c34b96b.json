{"ast":null,"code":"import * as actionTypes from \"../constants/cartConstants\";\nconst CART_INITIAL_STATE = {\n  cartItems: [],\n  searchItems: [title = 'something']\n};\nexport const cartReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : CART_INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.ADD_TO_CART:\n      const item = action.payload;\n      console.log('In the reducer', item);\n      const existItem = state.cartItems.find(x => x.title === item.title);\n      console.log(\"to check\", existItem);\n\n      if (existItem) {\n        return { ...state,\n          cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    case actionTypes.ADD_TO_SEARCH:\n      console.log('data in the reducer search', action.payload);\n      const items = action.payload; // const existItems = state.cartItems.find((cartItems) => cartItems.length==0)\n      // const cartLength = cartItems.length = 1\n\n      return { ...state,\n        searchItems: [items, ...state.searchItems]\n      };\n    // }\n\n    case actionTypes.CART_RESET:\n      return { ...state,\n        searchItems: [state.searchItems.length = 0]\n      };\n\n    case actionTypes.REMOVE_FROM_CART:\n      return { ...state,\n        cartItems: state.cartItems.filter(x => x.id !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/nte-461-vm/Desktop/nettantra/sails-frontend/library-app/src/redux/reducers/cartReducers.js"],"names":["actionTypes","CART_INITIAL_STATE","cartItems","searchItems","title","cartReducer","state","action","type","ADD_TO_CART","item","payload","console","log","existItem","find","x","map","product","ADD_TO_SEARCH","items","CART_RESET","length","REMOVE_FROM_CART","filter","id"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,4BAA7B;AAEA,MAAMC,kBAAkB,GAAG;AACzBC,EAAAA,SAAS,EAAE,EADc;AAEzBC,EAAAA,WAAW,EAAC,CACVC,KAAK,GAAC,WADI;AAFa,CAA3B;AAOA,OAAO,MAAMC,WAAW,GAAG,YAAwC;AAAA,MAAvCC,KAAuC,uEAA/BL,kBAA+B;AAAA,MAAXM,MAAW;;AACjE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,WAAW,CAACS,WAAjB;AACE,YAAMC,IAAI,GAAGH,MAAM,CAACI,OAApB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BH,IAA9B;AACA,YAAMI,SAAS,GAAGR,KAAK,CAACJ,SAAN,CAAgBa,IAAhB,CAAsBC,CAAD,IAAOA,CAAC,CAACZ,KAAF,KAAYM,IAAI,CAACN,KAA7C,CAAlB;AAEAQ,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBC,SAAxB;;AACA,UAAIA,SAAJ,EAAe;AACb,eAAO,EACL,GAAGR,KADE;AAELJ,UAAAA,SAAS,EAAEI,KAAK,CAACJ,SAAN,CAAgBe,GAAhB,CAAqBD,CAAD,IAC7BA,CAAC,CAACE,OAAF,KAAcJ,SAAS,CAACI,OAAxB,GAAkCR,IAAlC,GAAyCM,CADhC;AAFN,SAAP;AAMD,OAPD,MAOO;AACL,eAAO,EACL,GAAGV,KADE;AAELJ,UAAAA,SAAS,EAAE,CAAC,GAAGI,KAAK,CAACJ,SAAV,EAAqBQ,IAArB;AAFN,SAAP;AAID;;AAEH,SAAKV,WAAW,CAACmB,aAAjB;AACEP,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CN,MAAM,CAACI,OAAjD;AACA,YAAMS,KAAK,GAAGb,MAAM,CAACI,OAArB,CAFF,CAGE;AACA;;AAEE,aAAO,EACL,GAAGL,KADE;AAELH,QAAAA,WAAW,EAAC,CAACiB,KAAD,EAAQ,GAAGd,KAAK,CAACH,WAAjB;AAFP,OAAP;AAMJ;;AACA,SAAKH,WAAW,CAACqB,UAAjB;AACE,aAAM,EACJ,GAAGf,KADC;AAEJH,QAAAA,WAAW,EAAC,CAACG,KAAK,CAACH,WAAN,CAAkBmB,MAAlB,GAAyB,CAA1B;AAFR,OAAN;;AAOF,SAAKtB,WAAW,CAACuB,gBAAjB;AACE,aAAO,EACL,GAAGjB,KADE;AAELJ,QAAAA,SAAS,EAAEI,KAAK,CAACJ,SAAN,CAAgBsB,MAAhB,CAAwBR,CAAD,IAAOA,CAAC,CAACS,EAAF,KAASlB,MAAM,CAACI,OAA9C;AAFN,OAAP;;AAIF;AACE,aAAOL,KAAP;AAhDJ;AAkDD,CAnDM","sourcesContent":["import * as actionTypes from \"../constants/cartConstants\";\n\nconst CART_INITIAL_STATE = {\n  cartItems: [],\n  searchItems:[\n    title='something',\n  ]\n};\n\nexport const cartReducer = (state = CART_INITIAL_STATE, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_TO_CART:\n      const item = action.payload;\n      console.log('In the reducer', item)\n      const existItem = state.cartItems.find((x) => x.title === item.title)\n\n      console.log(\"to check\", existItem)\n      if (existItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map((x) =>\n            x.product === existItem.product ? item : x\n          ),\n        };\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item],\n        };\n      }\n\n    case actionTypes.ADD_TO_SEARCH:\n      console.log('data in the reducer search', action.payload)\n      const items = action.payload\n      // const existItems = state.cartItems.find((cartItems) => cartItems.length==0)\n      // const cartLength = cartItems.length = 1\n      \n        return {\n          ...state,\n          searchItems:[items, ...state.searchItems]\n        }\n\n      \n    // }\n    case actionTypes.CART_RESET:\n      return{\n        ...state,\n        searchItems:[state.searchItems.length=0]\n      }\n\n\n\n    case actionTypes.REMOVE_FROM_CART:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter((x) => x.id !== action.payload),\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}